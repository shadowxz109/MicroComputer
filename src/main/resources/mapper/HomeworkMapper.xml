<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.shadowxz.dao.HomeworkMapper">
  <resultMap id="BaseResultMap" type="com.shadowxz.domain.Homework">
    <constructor>
      <idArg column="id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="chapter_id" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="pulish_time" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="deadline" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="description" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="teacher_id" javaType="java.lang.String" jdbcType="VARCHAR" />
    </constructor>
  </resultMap>
  <resultMap id="DetailResultMap" type="com.shadowxz.domain.Homework">
    <id property="id" column="id" />
    <result property="chapterId" column="chapter_id" />
    <result property="pulishTime" column="pulish_time" />
    <result property="deadline" column="deadline" />
    <result property="description" column="description" />
    <result property="teacherId" column="teacher_id"/>
    <collection property="items" ofType="com.shadowxz.domain.HomeworkItem">
      <id property="id" column="item_id" />
      <result property="questionNum" column="question_num"/>
      <result property="detail" column="detail"/>
      <result property="type" column="type"/>
      <result property="remark" column="remark"/>
      <result property="score" column="score"/>
      <result property="answer" column="answer"/>
    </collection>
  </resultMap>
  <resultMap id="ScoreResultMap" type="com.shadowxz.domain.Homework">
    <id property="id" column="id" />
    <result property="chapterId" column="chapter_id" />
    <result property="pulishTime" column="pulish_time" />
    <result property="deadline" column="deadline" />
    <result property="teacherId" column="teacher_id"/>
    <result property="description" column="description" />
    <association property="homeworkScore" javaType="com.shadowxz.domain.HomeworkScore">
      <id property="id" column="score_id" />
      <result property="homeworkId" column="homework_id"/>
      <result property="studentId" column="student_id"/>
      <result property="scores" column="scores"/>
      <result property="status" column="status" />
      <association property="student" javaType="com.shadowxz.domain.Student">
        <id property="studentId" column="scores_student_id" />
        <result property="name" column="name" />
        <result property="clazz" column="clazz" />
      </association>
    </association>
  </resultMap>
  <resultMap id="StuScoreResultMap" type="com.shadowxz.domain.Homework">
    <id property="id" column="id" />
    <result property="chapterId" column="chapter_id" />
    <result property="pulishTime" column="pulish_time" />
    <result property="deadline" column="deadline" />
    <result property="teacherId" column="teacher_id"/>
    <result property="description" column="description" />
    <association property="homeworkScore" javaType="com.shadowxz.domain.HomeworkScore">
      <id property="id" column="score_id" />
      <result property="homeworkId" column="homework_id"/>
      <result property="studentId" column="student_id"/>
      <result property="scores" column="scores"/>
      <result property="status" column="status" />
      <result property="studentId" column="student_id" />
    </association>
  </resultMap>
  <resultMap id="ScoreDetailResultMap" type="com.shadowxz.domain.Homework">
    <id property="id" column="id" />
    <result property="chapterId" column="chapter_id" />
    <result property="pulishTime" column="pulish_time" />
    <result property="deadline" column="deadline" />
    <result property="description" column="description" />
    <collection property="items" ofType="com.shadowxz.domain.HomeworkItem">
      <id property="id" column="item_id" />
      <result property="questionNum" column="question_num"/>
      <result property="detail" column="detail"/>
      <result property="type" column="type"/>
      <result property="answer" column="answer"/>
      <result property="remark" column="remark"/>
      <result property="score" column="score"/>
      <association property="homeworkProgress" javaType="com.shadowxz.domain.HomeworkProgress">
        <id property="id" column="progress_id" />
        <result property="studentId" column="student_id" />
        <result property="answer" column="progress_answer" />
        <result property="status" column="status" />
        <result property="score" column="progress_score" />
        <result property="type" column="progress_type" />
        <result property="itemId" column="item_id"/>
        <result property="finishDate" column="finish_date"/>
      </association>
    </collection>
  </resultMap>
  <sql id="Base_Column_List">
    id, chapter_id, pulish_time, deadline, description, teacher_id
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from homework
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectHomeworkByTeacherId" parameterType="java.lang.String" resultMap="BaseResultMap">
    select
      <include refid="Base_Column_List" />
    from homework
    where teacher_id = #{teacherId,jdbcType=VARCHAR}
  </select>
  <!--一个学生单次作业完成情况详情-->
  <select id="selectStuScoreByHwIdAndStuId" parameterType="java.util.Map" resultMap="ScoreDetailResultMap">
    select t1.id as id,t1.chapter_id,t1.pulish_time,t1.deadline,t1.teacher_id,t1.description,
           t2.id as item_id,t2.question_num,t2.detail,t2.remark,t2.score,t2.answer,t2.type,
           t3.id as progress_id,t3.student_id,t3.answer as progress_answer,t3.status,t3.score as progress_score,t3.type as progress_type,t3.item_id,t3.finish_date
    from homework t1
    left join homework_item t2
      on t1.id = t2.homework_id
    left join homework_progress t3
      on t2.id = t3.item_id
    <if test="studentId != null">
        and t3.student_id = #{studentId,jdbcType=VARCHAR}
    </if>
    <where>
      <if test="id != null">
        t1.id = #{id,jdbcType=INTEGER}
      </if>
    </where>
    order by t2.question_num asc
  </select>
  <!--一个学生所有作业完成情况-->
  <select id="selectStuScoreByStatusAndStuId" resultMap="StuScoreResultMap" parameterType="java.util.Map">
    select t1.id as id,t1.chapter_id,t1.pulish_time,t1.deadline,t1.teacher_id,t1.description,
           t2.id as score_id,t2.homework_id,t2.student_id,t2.scores,t2.status
    from homework t1
    left join homework_score t2
      on t1.id = t2.homework_id
    <where>
      <if test="studentId != null">
        t2.student_id = #{studentId,jdbcType=VARCHAR}
      </if>
      <if test="status != null">
        and t2.status = #{status,jdbcType=VARCHAR}
      </if>
    </where>
  </select>
  <!--一个学生单次作业-->
  <select id="selectHwScoreByStuIdAndHwId" parameterType="java.util.Map" resultMap="ScoreResultMap">
    select t1.id as id,t1.chapter_id,t1.pulish_time,t1.deadline,t1.teacher_id,t1.description,
           t2.id as score_id,t2.homework_id,t2.student_id,t2.scores,t2.status
    from homework t1
    left join homework_score t2
      on t1.id = t2.homework_id
    left join student t3
      on t2.student_id = t3.student_id
    where t3.student_id = #{studentId,jdbcType=VARCHAR}
    and t1.id = #{homeworkId,jdbcType=VARCHAR}
  </select>
  <!--一个学生所有作业统计-->
  <select id="selectHwScoresByStuId" parameterType="java.lang.String" resultMap="ScoreResultMap">
    select t1.id as id,t1.chapter_id,t1.pulish_time,t1.deadline,t1.teacher_id,t1.description,
           t2.id as score_id,t2.homework_id,t2.student_id,t2.scores,t2.status,
           t3.student_id as scores_student_id,t3.name,t3.clazz
    from homework t1
    left join homework_score t2
      on t1.id = t2.homework_id
    left join student t3
      on t2.student_id = t3.student_id
    where t3.student_id = #{studentId,jdbcType=VARCHAR}
  </select>
  <!--单次作业详情-->
  <select id="selectHomeDetailById" parameterType="java.lang.Integer" resultMap="DetailResultMap">
    select t1.id as id,t1.chapter_id,t1.pulish_time,t1.deadline,t1.teacher_id,t1.description,
            t2.id as item_id,t2.question_num,t2.detail,t2.remark,t2.score,t2.type,t2.answer
    from homework t1
    left join homework_item t2
      on t1.id = t2.homework_id
    where t1.id = #{id,jdbcType=INTEGER}
  </select>
  <!--成绩分析-->
  <select id="selectClazzAverageScore" parameterType="java.lang.String" resultType="java.util.Map">
    select convert(avg(t4.scores),decimal(3,1)) as avgScore,t1.description
    from homework t1
    inner join homework_clazz t2
      on t1.id = t2.homework_id
    inner join student t3
      on t2.clazz = t3.clazz
    inner join homework_score t4
      on t1.id = t4.homework_id and t4.student_id = t3.student_id and t4.status = '2'
    where t2.clazz = #{clazz,jdbcType=VARCHAR}
    group by t2.clazz,t1.id
    order by t2.clazz,t1.id
  </select>
  <select id="selectQuestionAverageScore" resultType="java.util.Map" parameterType="java.lang.String">
      select convert(avg(t5.score),decimal(3,1)) as score,t1.description,t4.question_num as questionNum
      from homework t1
      inner join homework_clazz t2
        on t1.id = t2.homework_id
      inner join student t3
        on t2.clazz = t3.clazz
      inner join homework_item t4
        on t1.id = t4.homework_id
      inner join homework_progress t5
        on t4.id = t5.item_id and t5.student_id = t3.student_id and t5.status = '2'
      where t2.clazz = #{clazz,jdbcType=VARCHAR}
      group by t1.id,t4.id
      order by t1.id,t4.question_num
  </select>
  <select id="selectAverageScore" resultType="java.util.Map">
    select convert(avg(t4.scores),decimal(3,1)) as avgScore,t1.description,t2.clazz
      from homework t1
    inner join homework_clazz t2
      on t1.id = t2.homework_id
    inner join student t3
      on t2.clazz = t3.clazz
    inner join homework_score t4
      on t1.id = t4.homework_id and t4.student_id = t3.student_id and t4.status = '2'
    group by t2.clazz,t1.id
    order by t2.clazz,t1.id
  </select>
  <select id="selectClazzMinAndMaxScore" parameterType="java.lang.String" resultType="java.util.Map">
    select max(t4.scores) as maxScore,min(t4.scores) as  minScore,t1.description
    from homework t1
    inner join homework_clazz t2
        on t1.id = t2.homework_id
    inner join student t3
        on t2.clazz = t3.clazz
    inner join homework_score t4
        on t1.id = t4.homework_id and t4.student_id = t3.student_id and t4.status = '2'
    where t2.clazz = #{clazz,jdbcType=VARCHAR}
    group by t2.clazz,t1.id
    order by t2.clazz,t1.id
  </select>
  <!--最新作业所有分数-->
  <select id="selectClazzScore" resultType="java.util.Map" parameterType="java.lang.String">
      select t1.description,t4.scores
      from homework t1
      inner join homework_clazz t2
          on t1.id = t2.homework_id
      inner join student t3
          on t2.clazz = t3.clazz
      inner join homework_score t4
          on t1.id = t4.homework_id and t4.student_id = t3.student_id and t4.status = '2'
      where t2.clazz = #{clazz,jdbcType=VARCHAR}
          and t1.id = (select t1.id from homework t1 order by t1.id desc limit 1,1)
  </select>
  <!--个人成绩-->
  <select id="selectQuestionScore" resultType="java.util.Map" parameterType="java.lang.String">
      select t3.score,t1.description,t2.question_num as questionNum
      from homework t1
      inner join homework_item t2
        on t1.id = t2.homework_id
      inner join homework_progress t3
        on t2.id = t3.item_id and t3.status = '2'
      where t3.student_id = #{studentId,jdbcType=VARCHAR}
      order by t1.id,t2.question_num
  </select>
  <select id="selectStudentScore" resultType="java.util.Map" parameterType="java.lang.String">
      select t1.description,t2.scores
      from homework t1
      inner join homework_score t2
          on t1.id = t2.homework_id and t2.status = '2'
      where t2.student_id = #{studentId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from homework
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" useGeneratedKeys="true" keyProperty="id" parameterType="com.shadowxz.domain.Homework">
    insert into homework (id, chapter_id, pulish_time,
      deadline, teacher_id, description)
    values (#{id,jdbcType=INTEGER}, #{chapterId,jdbcType=VARCHAR}, #{pulishTime,jdbcType=TIMESTAMP},
      #{deadline,jdbcType=TIMESTAMP}, #{teacherId,jdbcType=VARCHAR}, #{description,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" useGeneratedKeys="true" keyProperty="id" parameterType="com.shadowxz.domain.Homework">
    insert into homework
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="chapterId != null">
        chapter_id,
      </if>
      <if test="pulishTime != null">
        pulish_time,
      </if>
      <if test="deadline != null">
        deadline,
      </if>
      <if test="teacherId != null">
        teacher_id,
      </if>
      <if test="description != null">
        description,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="chapterId != null">
        #{chapterId,jdbcType=VARCHAR},
      </if>
      <if test="pulishTime != null">
        #{pulishTime,jdbcType=TIMESTAMP},
      </if>
      <if test="deadline != null">
        #{deadline,jdbcType=TIMESTAMP},
      </if>
      <if test="teacherId != null">
        #{teacherId,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        #{description,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.shadowxz.domain.Homework">
    update homework
    <set>
      <if test="chapterId != null">
        chapter_id = #{chapterId,jdbcType=VARCHAR},
      </if>
      <if test="pulishTime != null">
        pulish_time = #{pulishTime,jdbcType=TIMESTAMP},
      </if>
      <if test="deadline != null">
        deadline = #{deadline,jdbcType=TIMESTAMP},
      </if>
      <if test="teacherId != null">
        teacher_id = #{teacherId,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        #{description,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.shadowxz.domain.Homework">
    update homework
    set chapter_id = #{chapterId,jdbcType=VARCHAR},
      pulish_time = #{pulishTime,jdbcType=TIMESTAMP},
      deadline = #{deadline,jdbcType=TIMESTAMP},
      teacher_id = #{teacherId,jdbcType=VARCHAR},
      description = #{description,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>