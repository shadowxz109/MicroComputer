<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.shadowxz.dao.HomeworkScoreMapper" >
  <resultMap id="BaseResultMap" type="com.shadowxz.domain.HomeworkScore" >
    <constructor >
      <idArg column="id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="homework_id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="student_id" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="scores" jdbcType="REAL" javaType="java.lang.Float" />
      <arg column="status" jdbcType="VARCHAR" javaType="java.lang.String" />
    </constructor>
  </resultMap>
  <resultMap id="ScoreResultMap" type="com.shadowxz.domain.HomeworkScore">
    <id property="id" column="score_id" />
    <result property="homeworkId" column="homework_id"/>
    <result property="studentId" column="student_id"/>
    <result property="scores" column="scores"/>
    <result property="status" column="status" />
    <association property="homework" javaType="com.shadowxz.domain.Homework">
      <id property="id" column="id" />
      <result property="chapterId" column="chapter_id" />
      <result property="pulishTime" column="pulish_time" />
      <result property="deadline" column="deadline" />
      <result property="teacherId" column="teacher_id"/>
      <result property="description" column="description" />
    </association>
    <association property="student" javaType="com.shadowxz.domain.Student">
      <id property="studentId" column="scores_student_id" />
      <result property="name" column="name" />
      <result property="clazz" column="clazz" />
    </association>
  </resultMap>
  <sql id="Base_Column_List" >
    id, homework_id, student_id, scores, status
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from homework_score
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectByStuIdAndHwId" resultMap="BaseResultMap" parameterType="java.util.Map">
    select
    <include refid="Base_Column_List" />
    from homework_score
    where student_id = #{studentId,jdbcType=VARCHAR}
    and homework_id = #{homeworkId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from homework_score
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByHomeworkId" parameterType="java.lang.Integer">
    delete from homework_score
    where homework_id = #{homeworkId,jdbcType=INTEGER}
  </delete>
  <insert id="insertHomeworkScores"  parameterType="java.util.List">
    insert into homework_score (homework_id, student_id, scores, status)
    values
    <foreach collection="list" item="score" index="index" separator=",">
      (#{score.homeworkId,jdbcType=INTEGER}, #{score.studentId,jdbcType=VARCHAR},
      #{score.scores,jdbcType=REAL}, #{score.status,jdbcType=VARCHAR})
    </foreach>
  </insert>
  <insert id="insert" parameterType="com.shadowxz.domain.HomeworkScore" >
    insert into homework_score (id, homework_id, student_id, 
      scores, status)
    values (#{id,jdbcType=INTEGER}, #{homeworkId,jdbcType=INTEGER}, #{studentId,jdbcType=VARCHAR}, 
      #{scores,jdbcType=REAL}, #{status,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.shadowxz.domain.HomeworkScore" >
    insert into homework_score
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="homeworkId != null" >
        homework_id,
      </if>
      <if test="studentId != null" >
        student_id,
      </if>
      <if test="scores != null" >
        scores,
      </if>
      <if test="status != null" >
        status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="homeworkId != null" >
        #{homeworkId,jdbcType=INTEGER},
      </if>
      <if test="studentId != null" >
        #{studentId,jdbcType=VARCHAR},
      </if>
      <if test="scores != null" >
        #{scores,jdbcType=REAL},
      </if>
      <if test="status != null" >
        #{status,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.shadowxz.domain.HomeworkScore" >
    update homework_score
    <set >
      <if test="homeworkId != null" >
        homework_id = #{homeworkId,jdbcType=INTEGER},
      </if>
      <if test="studentId != null" >
        student_id = #{studentId,jdbcType=VARCHAR},
      </if>
      <if test="scores != null" >
        scores = #{scores,jdbcType=REAL},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.shadowxz.domain.HomeworkScore" >
    update homework_score
    set homework_id = #{homeworkId,jdbcType=INTEGER},
      student_id = #{studentId,jdbcType=VARCHAR},
      scores = #{scores,jdbcType=REAL},
      status = #{status,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="updateOverdue">
    SET sql_mode=(SELECT REPLACE(@@sql_mode,'ONLY_FULL_GROUP_BY',''));
    update homework_score t1 left join homework t2 on t1.homework_id = t2.id set t1.status = '5'
    where unix_timestamp(now()) > unix_timestamp(t2.deadline)
  </select>
  <!--单次作业一个班作业完成情况-->
  <select id="selectHwScoresByIdAndClazz" parameterType="java.util.Map" resultMap="ScoreResultMap">
    select t1.id as id,t1.chapter_id,t1.pulish_time,t1.deadline,t1.teacher_id,t1.description,
           t2.id as score_id,t2.homework_id,t2.student_id,t2.scores,t2.status,
           t3.student_id as scores_student_id,t3.name,t3.clazz
    from homework t1
    left join homework_score t2
      on t1.id = t2.homework_id
    left join student t3
      on t2.student_id = t3.student_id
    <where>
      <if test="id != null">
        t1.id = #{id,jdbcType=INTEGER}
      </if>
      <if test="clazz != null">
        and t3.clazz = #{clazz,jdbcType=VARCHAR}
      </if>
    </where>
    order by t3.clazz,t2.student_id asc
  </select>
</mapper>